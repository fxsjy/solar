// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: agent.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "agent.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace baidu {
namespace galaxy {

namespace {

const ::google::protobuf::Descriptor* CreateContainerRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CreateContainerRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* CreateContainerResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CreateContainerResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* RemoveContainerRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RemoveContainerRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* RemoveContainerResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RemoveContainerResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* ListContainersRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ListContainersRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* ListContainersResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ListContainersResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* QueryRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  QueryRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* QueryResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  QueryResponse_reflection_ = NULL;
const ::google::protobuf::ServiceDescriptor* Agent_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_agent_2eproto() {
  protobuf_AddDesc_agent_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "agent.proto");
  GOOGLE_CHECK(file != NULL);
  CreateContainerRequest_descriptor_ = file->message_type(0);
  static const int CreateContainerRequest_offsets_[1] = {
  };
  CreateContainerRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CreateContainerRequest_descriptor_,
      CreateContainerRequest::default_instance_,
      CreateContainerRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateContainerRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateContainerRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CreateContainerRequest));
  CreateContainerResponse_descriptor_ = file->message_type(1);
  static const int CreateContainerResponse_offsets_[1] = {
  };
  CreateContainerResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CreateContainerResponse_descriptor_,
      CreateContainerResponse::default_instance_,
      CreateContainerResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateContainerResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateContainerResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CreateContainerResponse));
  RemoveContainerRequest_descriptor_ = file->message_type(2);
  static const int RemoveContainerRequest_offsets_[1] = {
  };
  RemoveContainerRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RemoveContainerRequest_descriptor_,
      RemoveContainerRequest::default_instance_,
      RemoveContainerRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemoveContainerRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemoveContainerRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RemoveContainerRequest));
  RemoveContainerResponse_descriptor_ = file->message_type(3);
  static const int RemoveContainerResponse_offsets_[1] = {
  };
  RemoveContainerResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RemoveContainerResponse_descriptor_,
      RemoveContainerResponse::default_instance_,
      RemoveContainerResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemoveContainerResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemoveContainerResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RemoveContainerResponse));
  ListContainersRequest_descriptor_ = file->message_type(4);
  static const int ListContainersRequest_offsets_[1] = {
  };
  ListContainersRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ListContainersRequest_descriptor_,
      ListContainersRequest::default_instance_,
      ListContainersRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListContainersRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListContainersRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ListContainersRequest));
  ListContainersResponse_descriptor_ = file->message_type(5);
  static const int ListContainersResponse_offsets_[1] = {
  };
  ListContainersResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ListContainersResponse_descriptor_,
      ListContainersResponse::default_instance_,
      ListContainersResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListContainersResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListContainersResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ListContainersResponse));
  QueryRequest_descriptor_ = file->message_type(6);
  static const int QueryRequest_offsets_[1] = {
  };
  QueryRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      QueryRequest_descriptor_,
      QueryRequest::default_instance_,
      QueryRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(QueryRequest));
  QueryResponse_descriptor_ = file->message_type(7);
  static const int QueryResponse_offsets_[1] = {
  };
  QueryResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      QueryResponse_descriptor_,
      QueryResponse::default_instance_,
      QueryResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(QueryResponse));
  Agent_descriptor_ = file->service(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_agent_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CreateContainerRequest_descriptor_, &CreateContainerRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CreateContainerResponse_descriptor_, &CreateContainerResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RemoveContainerRequest_descriptor_, &RemoveContainerRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RemoveContainerResponse_descriptor_, &RemoveContainerResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ListContainersRequest_descriptor_, &ListContainersRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ListContainersResponse_descriptor_, &ListContainersResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    QueryRequest_descriptor_, &QueryRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    QueryResponse_descriptor_, &QueryResponse::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_agent_2eproto() {
  delete CreateContainerRequest::default_instance_;
  delete CreateContainerRequest_reflection_;
  delete CreateContainerResponse::default_instance_;
  delete CreateContainerResponse_reflection_;
  delete RemoveContainerRequest::default_instance_;
  delete RemoveContainerRequest_reflection_;
  delete RemoveContainerResponse::default_instance_;
  delete RemoveContainerResponse_reflection_;
  delete ListContainersRequest::default_instance_;
  delete ListContainersRequest_reflection_;
  delete ListContainersResponse::default_instance_;
  delete ListContainersResponse_reflection_;
  delete QueryRequest::default_instance_;
  delete QueryRequest_reflection_;
  delete QueryResponse::default_instance_;
  delete QueryResponse_reflection_;
}

void protobuf_AddDesc_agent_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::baidu::galaxy::protobuf_AddDesc_galaxy_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\013agent.proto\022\014baidu.galaxy\032\014galaxy.prot"
    "o\"\030\n\026CreateContainerRequest\"\031\n\027CreateCon"
    "tainerResponse\"\030\n\026RemoveContainerRequest"
    "\"\031\n\027RemoveContainerResponse\"\027\n\025ListConta"
    "inersRequest\"\030\n\026ListContainersResponse\"\016"
    "\n\014QueryRequest\"\017\n\rQueryResponse2\346\002\n\005Agen"
    "t\022^\n\017CreateContainer\022$.baidu.galaxy.Crea"
    "teContainerRequest\032%.baidu.galaxy.Create"
    "ContainerResponse\022^\n\017RemoveContainer\022$.b"
    "aidu.galaxy.RemoveContainerRequest\032%.bai"
    "du.galaxy.RemoveContainerResponse\022[\n\016Lis"
    "tContainers\022#.baidu.galaxy.ListContainer"
    "sRequest\032$.baidu.galaxy.ListContainersRe"
    "sponse\022@\n\005Query\022\032.baidu.galaxy.QueryRequ"
    "est\032\033.baidu.galaxy.QueryResponseB\003\200\001\001", 597);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "agent.proto", &protobuf_RegisterTypes);
  CreateContainerRequest::default_instance_ = new CreateContainerRequest();
  CreateContainerResponse::default_instance_ = new CreateContainerResponse();
  RemoveContainerRequest::default_instance_ = new RemoveContainerRequest();
  RemoveContainerResponse::default_instance_ = new RemoveContainerResponse();
  ListContainersRequest::default_instance_ = new ListContainersRequest();
  ListContainersResponse::default_instance_ = new ListContainersResponse();
  QueryRequest::default_instance_ = new QueryRequest();
  QueryResponse::default_instance_ = new QueryResponse();
  CreateContainerRequest::default_instance_->InitAsDefaultInstance();
  CreateContainerResponse::default_instance_->InitAsDefaultInstance();
  RemoveContainerRequest::default_instance_->InitAsDefaultInstance();
  RemoveContainerResponse::default_instance_->InitAsDefaultInstance();
  ListContainersRequest::default_instance_->InitAsDefaultInstance();
  ListContainersResponse::default_instance_->InitAsDefaultInstance();
  QueryRequest::default_instance_->InitAsDefaultInstance();
  QueryResponse::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_agent_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_agent_2eproto {
  StaticDescriptorInitializer_agent_2eproto() {
    protobuf_AddDesc_agent_2eproto();
  }
} static_descriptor_initializer_agent_2eproto_;

// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

CreateContainerRequest::CreateContainerRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:baidu.galaxy.CreateContainerRequest)
}

void CreateContainerRequest::InitAsDefaultInstance() {
}

CreateContainerRequest::CreateContainerRequest(const CreateContainerRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:baidu.galaxy.CreateContainerRequest)
}

void CreateContainerRequest::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CreateContainerRequest::~CreateContainerRequest() {
  // @@protoc_insertion_point(destructor:baidu.galaxy.CreateContainerRequest)
  SharedDtor();
}

void CreateContainerRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CreateContainerRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateContainerRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CreateContainerRequest_descriptor_;
}

const CreateContainerRequest& CreateContainerRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_agent_2eproto();
  return *default_instance_;
}

CreateContainerRequest* CreateContainerRequest::default_instance_ = NULL;

CreateContainerRequest* CreateContainerRequest::New() const {
  return new CreateContainerRequest;
}

void CreateContainerRequest::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CreateContainerRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:baidu.galaxy.CreateContainerRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:baidu.galaxy.CreateContainerRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:baidu.galaxy.CreateContainerRequest)
  return false;
#undef DO_
}

void CreateContainerRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:baidu.galaxy.CreateContainerRequest)
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:baidu.galaxy.CreateContainerRequest)
}

::google::protobuf::uint8* CreateContainerRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:baidu.galaxy.CreateContainerRequest)
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:baidu.galaxy.CreateContainerRequest)
  return target;
}

int CreateContainerRequest::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateContainerRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CreateContainerRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CreateContainerRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CreateContainerRequest::MergeFrom(const CreateContainerRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CreateContainerRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateContainerRequest::CopyFrom(const CreateContainerRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateContainerRequest::IsInitialized() const {

  return true;
}

void CreateContainerRequest::Swap(CreateContainerRequest* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CreateContainerRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CreateContainerRequest_descriptor_;
  metadata.reflection = CreateContainerRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

CreateContainerResponse::CreateContainerResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:baidu.galaxy.CreateContainerResponse)
}

void CreateContainerResponse::InitAsDefaultInstance() {
}

CreateContainerResponse::CreateContainerResponse(const CreateContainerResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:baidu.galaxy.CreateContainerResponse)
}

void CreateContainerResponse::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CreateContainerResponse::~CreateContainerResponse() {
  // @@protoc_insertion_point(destructor:baidu.galaxy.CreateContainerResponse)
  SharedDtor();
}

void CreateContainerResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CreateContainerResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateContainerResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CreateContainerResponse_descriptor_;
}

const CreateContainerResponse& CreateContainerResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_agent_2eproto();
  return *default_instance_;
}

CreateContainerResponse* CreateContainerResponse::default_instance_ = NULL;

CreateContainerResponse* CreateContainerResponse::New() const {
  return new CreateContainerResponse;
}

void CreateContainerResponse::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CreateContainerResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:baidu.galaxy.CreateContainerResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:baidu.galaxy.CreateContainerResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:baidu.galaxy.CreateContainerResponse)
  return false;
#undef DO_
}

void CreateContainerResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:baidu.galaxy.CreateContainerResponse)
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:baidu.galaxy.CreateContainerResponse)
}

::google::protobuf::uint8* CreateContainerResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:baidu.galaxy.CreateContainerResponse)
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:baidu.galaxy.CreateContainerResponse)
  return target;
}

int CreateContainerResponse::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateContainerResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CreateContainerResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CreateContainerResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CreateContainerResponse::MergeFrom(const CreateContainerResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CreateContainerResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateContainerResponse::CopyFrom(const CreateContainerResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateContainerResponse::IsInitialized() const {

  return true;
}

void CreateContainerResponse::Swap(CreateContainerResponse* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CreateContainerResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CreateContainerResponse_descriptor_;
  metadata.reflection = CreateContainerResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

RemoveContainerRequest::RemoveContainerRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:baidu.galaxy.RemoveContainerRequest)
}

void RemoveContainerRequest::InitAsDefaultInstance() {
}

RemoveContainerRequest::RemoveContainerRequest(const RemoveContainerRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:baidu.galaxy.RemoveContainerRequest)
}

void RemoveContainerRequest::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RemoveContainerRequest::~RemoveContainerRequest() {
  // @@protoc_insertion_point(destructor:baidu.galaxy.RemoveContainerRequest)
  SharedDtor();
}

void RemoveContainerRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void RemoveContainerRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RemoveContainerRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RemoveContainerRequest_descriptor_;
}

const RemoveContainerRequest& RemoveContainerRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_agent_2eproto();
  return *default_instance_;
}

RemoveContainerRequest* RemoveContainerRequest::default_instance_ = NULL;

RemoveContainerRequest* RemoveContainerRequest::New() const {
  return new RemoveContainerRequest;
}

void RemoveContainerRequest::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RemoveContainerRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:baidu.galaxy.RemoveContainerRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:baidu.galaxy.RemoveContainerRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:baidu.galaxy.RemoveContainerRequest)
  return false;
#undef DO_
}

void RemoveContainerRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:baidu.galaxy.RemoveContainerRequest)
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:baidu.galaxy.RemoveContainerRequest)
}

::google::protobuf::uint8* RemoveContainerRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:baidu.galaxy.RemoveContainerRequest)
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:baidu.galaxy.RemoveContainerRequest)
  return target;
}

int RemoveContainerRequest::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RemoveContainerRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RemoveContainerRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RemoveContainerRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RemoveContainerRequest::MergeFrom(const RemoveContainerRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RemoveContainerRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemoveContainerRequest::CopyFrom(const RemoveContainerRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveContainerRequest::IsInitialized() const {

  return true;
}

void RemoveContainerRequest::Swap(RemoveContainerRequest* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RemoveContainerRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RemoveContainerRequest_descriptor_;
  metadata.reflection = RemoveContainerRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

RemoveContainerResponse::RemoveContainerResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:baidu.galaxy.RemoveContainerResponse)
}

void RemoveContainerResponse::InitAsDefaultInstance() {
}

RemoveContainerResponse::RemoveContainerResponse(const RemoveContainerResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:baidu.galaxy.RemoveContainerResponse)
}

void RemoveContainerResponse::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RemoveContainerResponse::~RemoveContainerResponse() {
  // @@protoc_insertion_point(destructor:baidu.galaxy.RemoveContainerResponse)
  SharedDtor();
}

void RemoveContainerResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void RemoveContainerResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RemoveContainerResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RemoveContainerResponse_descriptor_;
}

const RemoveContainerResponse& RemoveContainerResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_agent_2eproto();
  return *default_instance_;
}

RemoveContainerResponse* RemoveContainerResponse::default_instance_ = NULL;

RemoveContainerResponse* RemoveContainerResponse::New() const {
  return new RemoveContainerResponse;
}

void RemoveContainerResponse::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RemoveContainerResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:baidu.galaxy.RemoveContainerResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:baidu.galaxy.RemoveContainerResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:baidu.galaxy.RemoveContainerResponse)
  return false;
#undef DO_
}

void RemoveContainerResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:baidu.galaxy.RemoveContainerResponse)
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:baidu.galaxy.RemoveContainerResponse)
}

::google::protobuf::uint8* RemoveContainerResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:baidu.galaxy.RemoveContainerResponse)
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:baidu.galaxy.RemoveContainerResponse)
  return target;
}

int RemoveContainerResponse::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RemoveContainerResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RemoveContainerResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RemoveContainerResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RemoveContainerResponse::MergeFrom(const RemoveContainerResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RemoveContainerResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemoveContainerResponse::CopyFrom(const RemoveContainerResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveContainerResponse::IsInitialized() const {

  return true;
}

void RemoveContainerResponse::Swap(RemoveContainerResponse* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RemoveContainerResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RemoveContainerResponse_descriptor_;
  metadata.reflection = RemoveContainerResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

ListContainersRequest::ListContainersRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:baidu.galaxy.ListContainersRequest)
}

void ListContainersRequest::InitAsDefaultInstance() {
}

ListContainersRequest::ListContainersRequest(const ListContainersRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:baidu.galaxy.ListContainersRequest)
}

void ListContainersRequest::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ListContainersRequest::~ListContainersRequest() {
  // @@protoc_insertion_point(destructor:baidu.galaxy.ListContainersRequest)
  SharedDtor();
}

void ListContainersRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ListContainersRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListContainersRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ListContainersRequest_descriptor_;
}

const ListContainersRequest& ListContainersRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_agent_2eproto();
  return *default_instance_;
}

ListContainersRequest* ListContainersRequest::default_instance_ = NULL;

ListContainersRequest* ListContainersRequest::New() const {
  return new ListContainersRequest;
}

void ListContainersRequest::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ListContainersRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:baidu.galaxy.ListContainersRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:baidu.galaxy.ListContainersRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:baidu.galaxy.ListContainersRequest)
  return false;
#undef DO_
}

void ListContainersRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:baidu.galaxy.ListContainersRequest)
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:baidu.galaxy.ListContainersRequest)
}

::google::protobuf::uint8* ListContainersRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:baidu.galaxy.ListContainersRequest)
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:baidu.galaxy.ListContainersRequest)
  return target;
}

int ListContainersRequest::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListContainersRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ListContainersRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ListContainersRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ListContainersRequest::MergeFrom(const ListContainersRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ListContainersRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListContainersRequest::CopyFrom(const ListContainersRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListContainersRequest::IsInitialized() const {

  return true;
}

void ListContainersRequest::Swap(ListContainersRequest* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ListContainersRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ListContainersRequest_descriptor_;
  metadata.reflection = ListContainersRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

ListContainersResponse::ListContainersResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:baidu.galaxy.ListContainersResponse)
}

void ListContainersResponse::InitAsDefaultInstance() {
}

ListContainersResponse::ListContainersResponse(const ListContainersResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:baidu.galaxy.ListContainersResponse)
}

void ListContainersResponse::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ListContainersResponse::~ListContainersResponse() {
  // @@protoc_insertion_point(destructor:baidu.galaxy.ListContainersResponse)
  SharedDtor();
}

void ListContainersResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ListContainersResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListContainersResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ListContainersResponse_descriptor_;
}

const ListContainersResponse& ListContainersResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_agent_2eproto();
  return *default_instance_;
}

ListContainersResponse* ListContainersResponse::default_instance_ = NULL;

ListContainersResponse* ListContainersResponse::New() const {
  return new ListContainersResponse;
}

void ListContainersResponse::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ListContainersResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:baidu.galaxy.ListContainersResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:baidu.galaxy.ListContainersResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:baidu.galaxy.ListContainersResponse)
  return false;
#undef DO_
}

void ListContainersResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:baidu.galaxy.ListContainersResponse)
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:baidu.galaxy.ListContainersResponse)
}

::google::protobuf::uint8* ListContainersResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:baidu.galaxy.ListContainersResponse)
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:baidu.galaxy.ListContainersResponse)
  return target;
}

int ListContainersResponse::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListContainersResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ListContainersResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ListContainersResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ListContainersResponse::MergeFrom(const ListContainersResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ListContainersResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListContainersResponse::CopyFrom(const ListContainersResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListContainersResponse::IsInitialized() const {

  return true;
}

void ListContainersResponse::Swap(ListContainersResponse* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ListContainersResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ListContainersResponse_descriptor_;
  metadata.reflection = ListContainersResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

QueryRequest::QueryRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:baidu.galaxy.QueryRequest)
}

void QueryRequest::InitAsDefaultInstance() {
}

QueryRequest::QueryRequest(const QueryRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:baidu.galaxy.QueryRequest)
}

void QueryRequest::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

QueryRequest::~QueryRequest() {
  // @@protoc_insertion_point(destructor:baidu.galaxy.QueryRequest)
  SharedDtor();
}

void QueryRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void QueryRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QueryRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return QueryRequest_descriptor_;
}

const QueryRequest& QueryRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_agent_2eproto();
  return *default_instance_;
}

QueryRequest* QueryRequest::default_instance_ = NULL;

QueryRequest* QueryRequest::New() const {
  return new QueryRequest;
}

void QueryRequest::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool QueryRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:baidu.galaxy.QueryRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:baidu.galaxy.QueryRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:baidu.galaxy.QueryRequest)
  return false;
#undef DO_
}

void QueryRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:baidu.galaxy.QueryRequest)
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:baidu.galaxy.QueryRequest)
}

::google::protobuf::uint8* QueryRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:baidu.galaxy.QueryRequest)
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:baidu.galaxy.QueryRequest)
  return target;
}

int QueryRequest::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QueryRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const QueryRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const QueryRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void QueryRequest::MergeFrom(const QueryRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void QueryRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryRequest::CopyFrom(const QueryRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryRequest::IsInitialized() const {

  return true;
}

void QueryRequest::Swap(QueryRequest* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata QueryRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = QueryRequest_descriptor_;
  metadata.reflection = QueryRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

QueryResponse::QueryResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:baidu.galaxy.QueryResponse)
}

void QueryResponse::InitAsDefaultInstance() {
}

QueryResponse::QueryResponse(const QueryResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:baidu.galaxy.QueryResponse)
}

void QueryResponse::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

QueryResponse::~QueryResponse() {
  // @@protoc_insertion_point(destructor:baidu.galaxy.QueryResponse)
  SharedDtor();
}

void QueryResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void QueryResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QueryResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return QueryResponse_descriptor_;
}

const QueryResponse& QueryResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_agent_2eproto();
  return *default_instance_;
}

QueryResponse* QueryResponse::default_instance_ = NULL;

QueryResponse* QueryResponse::New() const {
  return new QueryResponse;
}

void QueryResponse::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool QueryResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:baidu.galaxy.QueryResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:baidu.galaxy.QueryResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:baidu.galaxy.QueryResponse)
  return false;
#undef DO_
}

void QueryResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:baidu.galaxy.QueryResponse)
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:baidu.galaxy.QueryResponse)
}

::google::protobuf::uint8* QueryResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:baidu.galaxy.QueryResponse)
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:baidu.galaxy.QueryResponse)
  return target;
}

int QueryResponse::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QueryResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const QueryResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const QueryResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void QueryResponse::MergeFrom(const QueryResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void QueryResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryResponse::CopyFrom(const QueryResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryResponse::IsInitialized() const {

  return true;
}

void QueryResponse::Swap(QueryResponse* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata QueryResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = QueryResponse_descriptor_;
  metadata.reflection = QueryResponse_reflection_;
  return metadata;
}


// ===================================================================

Agent::~Agent() {}

const ::google::protobuf::ServiceDescriptor* Agent::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Agent_descriptor_;
}

const ::google::protobuf::ServiceDescriptor* Agent::GetDescriptor() {
  protobuf_AssignDescriptorsOnce();
  return Agent_descriptor_;
}

void Agent::CreateContainer(::google::protobuf::RpcController* controller,
                         const ::baidu::galaxy::CreateContainerRequest*,
                         ::baidu::galaxy::CreateContainerResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method CreateContainer() not implemented.");
  done->Run();
}

void Agent::RemoveContainer(::google::protobuf::RpcController* controller,
                         const ::baidu::galaxy::RemoveContainerRequest*,
                         ::baidu::galaxy::RemoveContainerResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method RemoveContainer() not implemented.");
  done->Run();
}

void Agent::ListContainers(::google::protobuf::RpcController* controller,
                         const ::baidu::galaxy::ListContainersRequest*,
                         ::baidu::galaxy::ListContainersResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method ListContainers() not implemented.");
  done->Run();
}

void Agent::Query(::google::protobuf::RpcController* controller,
                         const ::baidu::galaxy::QueryRequest*,
                         ::baidu::galaxy::QueryResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method Query() not implemented.");
  done->Run();
}

void Agent::CallMethod(const ::google::protobuf::MethodDescriptor* method,
                             ::google::protobuf::RpcController* controller,
                             const ::google::protobuf::Message* request,
                             ::google::protobuf::Message* response,
                             ::google::protobuf::Closure* done) {
  GOOGLE_DCHECK_EQ(method->service(), Agent_descriptor_);
  switch(method->index()) {
    case 0:
      CreateContainer(controller,
             ::google::protobuf::down_cast<const ::baidu::galaxy::CreateContainerRequest*>(request),
             ::google::protobuf::down_cast< ::baidu::galaxy::CreateContainerResponse*>(response),
             done);
      break;
    case 1:
      RemoveContainer(controller,
             ::google::protobuf::down_cast<const ::baidu::galaxy::RemoveContainerRequest*>(request),
             ::google::protobuf::down_cast< ::baidu::galaxy::RemoveContainerResponse*>(response),
             done);
      break;
    case 2:
      ListContainers(controller,
             ::google::protobuf::down_cast<const ::baidu::galaxy::ListContainersRequest*>(request),
             ::google::protobuf::down_cast< ::baidu::galaxy::ListContainersResponse*>(response),
             done);
      break;
    case 3:
      Query(controller,
             ::google::protobuf::down_cast<const ::baidu::galaxy::QueryRequest*>(request),
             ::google::protobuf::down_cast< ::baidu::galaxy::QueryResponse*>(response),
             done);
      break;
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      break;
  }
}

const ::google::protobuf::Message& Agent::GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::baidu::galaxy::CreateContainerRequest::default_instance();
    case 1:
      return ::baidu::galaxy::RemoveContainerRequest::default_instance();
    case 2:
      return ::baidu::galaxy::ListContainersRequest::default_instance();
    case 3:
      return ::baidu::galaxy::QueryRequest::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *reinterpret_cast< ::google::protobuf::Message*>(NULL);
  }
}

const ::google::protobuf::Message& Agent::GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::baidu::galaxy::CreateContainerResponse::default_instance();
    case 1:
      return ::baidu::galaxy::RemoveContainerResponse::default_instance();
    case 2:
      return ::baidu::galaxy::ListContainersResponse::default_instance();
    case 3:
      return ::baidu::galaxy::QueryResponse::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *reinterpret_cast< ::google::protobuf::Message*>(NULL);
  }
}

Agent_Stub::Agent_Stub(::google::protobuf::RpcChannel* channel)
  : channel_(channel), owns_channel_(false) {}
Agent_Stub::Agent_Stub(
    ::google::protobuf::RpcChannel* channel,
    ::google::protobuf::Service::ChannelOwnership ownership)
  : channel_(channel),
    owns_channel_(ownership == ::google::protobuf::Service::STUB_OWNS_CHANNEL) {}
Agent_Stub::~Agent_Stub() {
  if (owns_channel_) delete channel_;
}

void Agent_Stub::CreateContainer(::google::protobuf::RpcController* controller,
                              const ::baidu::galaxy::CreateContainerRequest* request,
                              ::baidu::galaxy::CreateContainerResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(0),
                       controller, request, response, done);
}
void Agent_Stub::RemoveContainer(::google::protobuf::RpcController* controller,
                              const ::baidu::galaxy::RemoveContainerRequest* request,
                              ::baidu::galaxy::RemoveContainerResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(1),
                       controller, request, response, done);
}
void Agent_Stub::ListContainers(::google::protobuf::RpcController* controller,
                              const ::baidu::galaxy::ListContainersRequest* request,
                              ::baidu::galaxy::ListContainersResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(2),
                       controller, request, response, done);
}
void Agent_Stub::Query(::google::protobuf::RpcController* controller,
                              const ::baidu::galaxy::QueryRequest* request,
                              ::baidu::galaxy::QueryResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(3),
                       controller, request, response, done);
}

// @@protoc_insertion_point(namespace_scope)

}  // namespace galaxy
}  // namespace baidu

// @@protoc_insertion_point(global_scope)
