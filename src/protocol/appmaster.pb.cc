// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: appmaster.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "appmaster.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace baidu {
namespace galaxy {

namespace {

const ::google::protobuf::Descriptor* AssignTaskRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AssignTaskRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* AssignTaskResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AssignTaskResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* ListTasksRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ListTasksRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* ListTasksResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ListTasksResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* StartTaskRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  StartTaskRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* StartTaskResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  StartTaskResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* StopTaskRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  StopTaskRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* StopTaskResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  StopTaskResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* UpdateTaskRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UpdateTaskRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* UpdateTaskResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UpdateTaskResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* ExecuteCmdRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ExecuteCmdRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* ExecuteCmdResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ExecuteCmdResponse_reflection_ = NULL;
const ::google::protobuf::ServiceDescriptor* AppMaster_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_appmaster_2eproto() {
  protobuf_AddDesc_appmaster_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "appmaster.proto");
  GOOGLE_CHECK(file != NULL);
  AssignTaskRequest_descriptor_ = file->message_type(0);
  static const int AssignTaskRequest_offsets_[1] = {
  };
  AssignTaskRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AssignTaskRequest_descriptor_,
      AssignTaskRequest::default_instance_,
      AssignTaskRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AssignTaskRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AssignTaskRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AssignTaskRequest));
  AssignTaskResponse_descriptor_ = file->message_type(1);
  static const int AssignTaskResponse_offsets_[1] = {
  };
  AssignTaskResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AssignTaskResponse_descriptor_,
      AssignTaskResponse::default_instance_,
      AssignTaskResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AssignTaskResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AssignTaskResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AssignTaskResponse));
  ListTasksRequest_descriptor_ = file->message_type(2);
  static const int ListTasksRequest_offsets_[1] = {
  };
  ListTasksRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ListTasksRequest_descriptor_,
      ListTasksRequest::default_instance_,
      ListTasksRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListTasksRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListTasksRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ListTasksRequest));
  ListTasksResponse_descriptor_ = file->message_type(3);
  static const int ListTasksResponse_offsets_[1] = {
  };
  ListTasksResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ListTasksResponse_descriptor_,
      ListTasksResponse::default_instance_,
      ListTasksResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListTasksResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListTasksResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ListTasksResponse));
  StartTaskRequest_descriptor_ = file->message_type(4);
  static const int StartTaskRequest_offsets_[1] = {
  };
  StartTaskRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      StartTaskRequest_descriptor_,
      StartTaskRequest::default_instance_,
      StartTaskRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StartTaskRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StartTaskRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(StartTaskRequest));
  StartTaskResponse_descriptor_ = file->message_type(5);
  static const int StartTaskResponse_offsets_[1] = {
  };
  StartTaskResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      StartTaskResponse_descriptor_,
      StartTaskResponse::default_instance_,
      StartTaskResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StartTaskResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StartTaskResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(StartTaskResponse));
  StopTaskRequest_descriptor_ = file->message_type(6);
  static const int StopTaskRequest_offsets_[1] = {
  };
  StopTaskRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      StopTaskRequest_descriptor_,
      StopTaskRequest::default_instance_,
      StopTaskRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StopTaskRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StopTaskRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(StopTaskRequest));
  StopTaskResponse_descriptor_ = file->message_type(7);
  static const int StopTaskResponse_offsets_[1] = {
  };
  StopTaskResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      StopTaskResponse_descriptor_,
      StopTaskResponse::default_instance_,
      StopTaskResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StopTaskResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StopTaskResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(StopTaskResponse));
  UpdateTaskRequest_descriptor_ = file->message_type(8);
  static const int UpdateTaskRequest_offsets_[1] = {
  };
  UpdateTaskRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      UpdateTaskRequest_descriptor_,
      UpdateTaskRequest::default_instance_,
      UpdateTaskRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateTaskRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateTaskRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(UpdateTaskRequest));
  UpdateTaskResponse_descriptor_ = file->message_type(9);
  static const int UpdateTaskResponse_offsets_[1] = {
  };
  UpdateTaskResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      UpdateTaskResponse_descriptor_,
      UpdateTaskResponse::default_instance_,
      UpdateTaskResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateTaskResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateTaskResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(UpdateTaskResponse));
  ExecuteCmdRequest_descriptor_ = file->message_type(10);
  static const int ExecuteCmdRequest_offsets_[1] = {
  };
  ExecuteCmdRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ExecuteCmdRequest_descriptor_,
      ExecuteCmdRequest::default_instance_,
      ExecuteCmdRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExecuteCmdRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExecuteCmdRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ExecuteCmdRequest));
  ExecuteCmdResponse_descriptor_ = file->message_type(11);
  static const int ExecuteCmdResponse_offsets_[1] = {
  };
  ExecuteCmdResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ExecuteCmdResponse_descriptor_,
      ExecuteCmdResponse::default_instance_,
      ExecuteCmdResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExecuteCmdResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExecuteCmdResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ExecuteCmdResponse));
  AppMaster_descriptor_ = file->service(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_appmaster_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AssignTaskRequest_descriptor_, &AssignTaskRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AssignTaskResponse_descriptor_, &AssignTaskResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ListTasksRequest_descriptor_, &ListTasksRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ListTasksResponse_descriptor_, &ListTasksResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    StartTaskRequest_descriptor_, &StartTaskRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    StartTaskResponse_descriptor_, &StartTaskResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    StopTaskRequest_descriptor_, &StopTaskRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    StopTaskResponse_descriptor_, &StopTaskResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    UpdateTaskRequest_descriptor_, &UpdateTaskRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    UpdateTaskResponse_descriptor_, &UpdateTaskResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ExecuteCmdRequest_descriptor_, &ExecuteCmdRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ExecuteCmdResponse_descriptor_, &ExecuteCmdResponse::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_appmaster_2eproto() {
  delete AssignTaskRequest::default_instance_;
  delete AssignTaskRequest_reflection_;
  delete AssignTaskResponse::default_instance_;
  delete AssignTaskResponse_reflection_;
  delete ListTasksRequest::default_instance_;
  delete ListTasksRequest_reflection_;
  delete ListTasksResponse::default_instance_;
  delete ListTasksResponse_reflection_;
  delete StartTaskRequest::default_instance_;
  delete StartTaskRequest_reflection_;
  delete StartTaskResponse::default_instance_;
  delete StartTaskResponse_reflection_;
  delete StopTaskRequest::default_instance_;
  delete StopTaskRequest_reflection_;
  delete StopTaskResponse::default_instance_;
  delete StopTaskResponse_reflection_;
  delete UpdateTaskRequest::default_instance_;
  delete UpdateTaskRequest_reflection_;
  delete UpdateTaskResponse::default_instance_;
  delete UpdateTaskResponse_reflection_;
  delete ExecuteCmdRequest::default_instance_;
  delete ExecuteCmdRequest_reflection_;
  delete ExecuteCmdResponse::default_instance_;
  delete ExecuteCmdResponse_reflection_;
}

void protobuf_AddDesc_appmaster_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::baidu::galaxy::protobuf_AddDesc_galaxy_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\017appmaster.proto\022\014baidu.galaxy\032\014galaxy."
    "proto\"\023\n\021AssignTaskRequest\"\024\n\022AssignTask"
    "Response\"\022\n\020ListTasksRequest\"\023\n\021ListTask"
    "sResponse\"\022\n\020StartTaskRequest\"\023\n\021StartTa"
    "skResponse\"\021\n\017StopTaskRequest\"\022\n\020StopTas"
    "kResponse\"\023\n\021UpdateTaskRequest\"\024\n\022Update"
    "TaskResponse\"\023\n\021ExecuteCmdRequest\"\024\n\022Exe"
    "cuteCmdResponse2\345\003\n\tAppMaster\022O\n\nAssignT"
    "ask\022\037.baidu.galaxy.AssignTaskRequest\032 .b"
    "aidu.galaxy.AssignTaskResponse\022L\n\tListTa"
    "sks\022\036.baidu.galaxy.ListTasksRequest\032\037.ba"
    "idu.galaxy.ListTasksResponse\022L\n\tStartTas"
    "k\022\036.baidu.galaxy.StartTaskRequest\032\037.baid"
    "u.galaxy.StartTaskResponse\022I\n\010StopTask\022\035"
    ".baidu.galaxy.StopTaskRequest\032\036.baidu.ga"
    "laxy.StopTaskResponse\022O\n\nUpdateTask\022\037.ba"
    "idu.galaxy.UpdateTaskRequest\032 .baidu.gal"
    "axy.UpdateTaskResponse\022O\n\nExecuteCmd\022\037.b"
    "aidu.galaxy.ExecuteCmdRequest\032 .baidu.ga"
    "laxy.ExecuteCmdResponseB\003\200\001\001", 788);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "appmaster.proto", &protobuf_RegisterTypes);
  AssignTaskRequest::default_instance_ = new AssignTaskRequest();
  AssignTaskResponse::default_instance_ = new AssignTaskResponse();
  ListTasksRequest::default_instance_ = new ListTasksRequest();
  ListTasksResponse::default_instance_ = new ListTasksResponse();
  StartTaskRequest::default_instance_ = new StartTaskRequest();
  StartTaskResponse::default_instance_ = new StartTaskResponse();
  StopTaskRequest::default_instance_ = new StopTaskRequest();
  StopTaskResponse::default_instance_ = new StopTaskResponse();
  UpdateTaskRequest::default_instance_ = new UpdateTaskRequest();
  UpdateTaskResponse::default_instance_ = new UpdateTaskResponse();
  ExecuteCmdRequest::default_instance_ = new ExecuteCmdRequest();
  ExecuteCmdResponse::default_instance_ = new ExecuteCmdResponse();
  AssignTaskRequest::default_instance_->InitAsDefaultInstance();
  AssignTaskResponse::default_instance_->InitAsDefaultInstance();
  ListTasksRequest::default_instance_->InitAsDefaultInstance();
  ListTasksResponse::default_instance_->InitAsDefaultInstance();
  StartTaskRequest::default_instance_->InitAsDefaultInstance();
  StartTaskResponse::default_instance_->InitAsDefaultInstance();
  StopTaskRequest::default_instance_->InitAsDefaultInstance();
  StopTaskResponse::default_instance_->InitAsDefaultInstance();
  UpdateTaskRequest::default_instance_->InitAsDefaultInstance();
  UpdateTaskResponse::default_instance_->InitAsDefaultInstance();
  ExecuteCmdRequest::default_instance_->InitAsDefaultInstance();
  ExecuteCmdResponse::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_appmaster_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_appmaster_2eproto {
  StaticDescriptorInitializer_appmaster_2eproto() {
    protobuf_AddDesc_appmaster_2eproto();
  }
} static_descriptor_initializer_appmaster_2eproto_;

// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

AssignTaskRequest::AssignTaskRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:baidu.galaxy.AssignTaskRequest)
}

void AssignTaskRequest::InitAsDefaultInstance() {
}

AssignTaskRequest::AssignTaskRequest(const AssignTaskRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:baidu.galaxy.AssignTaskRequest)
}

void AssignTaskRequest::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AssignTaskRequest::~AssignTaskRequest() {
  // @@protoc_insertion_point(destructor:baidu.galaxy.AssignTaskRequest)
  SharedDtor();
}

void AssignTaskRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void AssignTaskRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AssignTaskRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AssignTaskRequest_descriptor_;
}

const AssignTaskRequest& AssignTaskRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_appmaster_2eproto();
  return *default_instance_;
}

AssignTaskRequest* AssignTaskRequest::default_instance_ = NULL;

AssignTaskRequest* AssignTaskRequest::New() const {
  return new AssignTaskRequest;
}

void AssignTaskRequest::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AssignTaskRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:baidu.galaxy.AssignTaskRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:baidu.galaxy.AssignTaskRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:baidu.galaxy.AssignTaskRequest)
  return false;
#undef DO_
}

void AssignTaskRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:baidu.galaxy.AssignTaskRequest)
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:baidu.galaxy.AssignTaskRequest)
}

::google::protobuf::uint8* AssignTaskRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:baidu.galaxy.AssignTaskRequest)
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:baidu.galaxy.AssignTaskRequest)
  return target;
}

int AssignTaskRequest::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AssignTaskRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AssignTaskRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AssignTaskRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AssignTaskRequest::MergeFrom(const AssignTaskRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AssignTaskRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AssignTaskRequest::CopyFrom(const AssignTaskRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AssignTaskRequest::IsInitialized() const {

  return true;
}

void AssignTaskRequest::Swap(AssignTaskRequest* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AssignTaskRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AssignTaskRequest_descriptor_;
  metadata.reflection = AssignTaskRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

AssignTaskResponse::AssignTaskResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:baidu.galaxy.AssignTaskResponse)
}

void AssignTaskResponse::InitAsDefaultInstance() {
}

AssignTaskResponse::AssignTaskResponse(const AssignTaskResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:baidu.galaxy.AssignTaskResponse)
}

void AssignTaskResponse::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AssignTaskResponse::~AssignTaskResponse() {
  // @@protoc_insertion_point(destructor:baidu.galaxy.AssignTaskResponse)
  SharedDtor();
}

void AssignTaskResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void AssignTaskResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AssignTaskResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AssignTaskResponse_descriptor_;
}

const AssignTaskResponse& AssignTaskResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_appmaster_2eproto();
  return *default_instance_;
}

AssignTaskResponse* AssignTaskResponse::default_instance_ = NULL;

AssignTaskResponse* AssignTaskResponse::New() const {
  return new AssignTaskResponse;
}

void AssignTaskResponse::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AssignTaskResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:baidu.galaxy.AssignTaskResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:baidu.galaxy.AssignTaskResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:baidu.galaxy.AssignTaskResponse)
  return false;
#undef DO_
}

void AssignTaskResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:baidu.galaxy.AssignTaskResponse)
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:baidu.galaxy.AssignTaskResponse)
}

::google::protobuf::uint8* AssignTaskResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:baidu.galaxy.AssignTaskResponse)
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:baidu.galaxy.AssignTaskResponse)
  return target;
}

int AssignTaskResponse::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AssignTaskResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AssignTaskResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AssignTaskResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AssignTaskResponse::MergeFrom(const AssignTaskResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AssignTaskResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AssignTaskResponse::CopyFrom(const AssignTaskResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AssignTaskResponse::IsInitialized() const {

  return true;
}

void AssignTaskResponse::Swap(AssignTaskResponse* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AssignTaskResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AssignTaskResponse_descriptor_;
  metadata.reflection = AssignTaskResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

ListTasksRequest::ListTasksRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:baidu.galaxy.ListTasksRequest)
}

void ListTasksRequest::InitAsDefaultInstance() {
}

ListTasksRequest::ListTasksRequest(const ListTasksRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:baidu.galaxy.ListTasksRequest)
}

void ListTasksRequest::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ListTasksRequest::~ListTasksRequest() {
  // @@protoc_insertion_point(destructor:baidu.galaxy.ListTasksRequest)
  SharedDtor();
}

void ListTasksRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ListTasksRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListTasksRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ListTasksRequest_descriptor_;
}

const ListTasksRequest& ListTasksRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_appmaster_2eproto();
  return *default_instance_;
}

ListTasksRequest* ListTasksRequest::default_instance_ = NULL;

ListTasksRequest* ListTasksRequest::New() const {
  return new ListTasksRequest;
}

void ListTasksRequest::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ListTasksRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:baidu.galaxy.ListTasksRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:baidu.galaxy.ListTasksRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:baidu.galaxy.ListTasksRequest)
  return false;
#undef DO_
}

void ListTasksRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:baidu.galaxy.ListTasksRequest)
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:baidu.galaxy.ListTasksRequest)
}

::google::protobuf::uint8* ListTasksRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:baidu.galaxy.ListTasksRequest)
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:baidu.galaxy.ListTasksRequest)
  return target;
}

int ListTasksRequest::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListTasksRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ListTasksRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ListTasksRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ListTasksRequest::MergeFrom(const ListTasksRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ListTasksRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListTasksRequest::CopyFrom(const ListTasksRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListTasksRequest::IsInitialized() const {

  return true;
}

void ListTasksRequest::Swap(ListTasksRequest* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ListTasksRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ListTasksRequest_descriptor_;
  metadata.reflection = ListTasksRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

ListTasksResponse::ListTasksResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:baidu.galaxy.ListTasksResponse)
}

void ListTasksResponse::InitAsDefaultInstance() {
}

ListTasksResponse::ListTasksResponse(const ListTasksResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:baidu.galaxy.ListTasksResponse)
}

void ListTasksResponse::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ListTasksResponse::~ListTasksResponse() {
  // @@protoc_insertion_point(destructor:baidu.galaxy.ListTasksResponse)
  SharedDtor();
}

void ListTasksResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ListTasksResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListTasksResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ListTasksResponse_descriptor_;
}

const ListTasksResponse& ListTasksResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_appmaster_2eproto();
  return *default_instance_;
}

ListTasksResponse* ListTasksResponse::default_instance_ = NULL;

ListTasksResponse* ListTasksResponse::New() const {
  return new ListTasksResponse;
}

void ListTasksResponse::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ListTasksResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:baidu.galaxy.ListTasksResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:baidu.galaxy.ListTasksResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:baidu.galaxy.ListTasksResponse)
  return false;
#undef DO_
}

void ListTasksResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:baidu.galaxy.ListTasksResponse)
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:baidu.galaxy.ListTasksResponse)
}

::google::protobuf::uint8* ListTasksResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:baidu.galaxy.ListTasksResponse)
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:baidu.galaxy.ListTasksResponse)
  return target;
}

int ListTasksResponse::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListTasksResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ListTasksResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ListTasksResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ListTasksResponse::MergeFrom(const ListTasksResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ListTasksResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListTasksResponse::CopyFrom(const ListTasksResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListTasksResponse::IsInitialized() const {

  return true;
}

void ListTasksResponse::Swap(ListTasksResponse* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ListTasksResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ListTasksResponse_descriptor_;
  metadata.reflection = ListTasksResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

StartTaskRequest::StartTaskRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:baidu.galaxy.StartTaskRequest)
}

void StartTaskRequest::InitAsDefaultInstance() {
}

StartTaskRequest::StartTaskRequest(const StartTaskRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:baidu.galaxy.StartTaskRequest)
}

void StartTaskRequest::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

StartTaskRequest::~StartTaskRequest() {
  // @@protoc_insertion_point(destructor:baidu.galaxy.StartTaskRequest)
  SharedDtor();
}

void StartTaskRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void StartTaskRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StartTaskRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return StartTaskRequest_descriptor_;
}

const StartTaskRequest& StartTaskRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_appmaster_2eproto();
  return *default_instance_;
}

StartTaskRequest* StartTaskRequest::default_instance_ = NULL;

StartTaskRequest* StartTaskRequest::New() const {
  return new StartTaskRequest;
}

void StartTaskRequest::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool StartTaskRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:baidu.galaxy.StartTaskRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:baidu.galaxy.StartTaskRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:baidu.galaxy.StartTaskRequest)
  return false;
#undef DO_
}

void StartTaskRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:baidu.galaxy.StartTaskRequest)
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:baidu.galaxy.StartTaskRequest)
}

::google::protobuf::uint8* StartTaskRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:baidu.galaxy.StartTaskRequest)
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:baidu.galaxy.StartTaskRequest)
  return target;
}

int StartTaskRequest::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StartTaskRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const StartTaskRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const StartTaskRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void StartTaskRequest::MergeFrom(const StartTaskRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void StartTaskRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StartTaskRequest::CopyFrom(const StartTaskRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StartTaskRequest::IsInitialized() const {

  return true;
}

void StartTaskRequest::Swap(StartTaskRequest* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata StartTaskRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = StartTaskRequest_descriptor_;
  metadata.reflection = StartTaskRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

StartTaskResponse::StartTaskResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:baidu.galaxy.StartTaskResponse)
}

void StartTaskResponse::InitAsDefaultInstance() {
}

StartTaskResponse::StartTaskResponse(const StartTaskResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:baidu.galaxy.StartTaskResponse)
}

void StartTaskResponse::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

StartTaskResponse::~StartTaskResponse() {
  // @@protoc_insertion_point(destructor:baidu.galaxy.StartTaskResponse)
  SharedDtor();
}

void StartTaskResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void StartTaskResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StartTaskResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return StartTaskResponse_descriptor_;
}

const StartTaskResponse& StartTaskResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_appmaster_2eproto();
  return *default_instance_;
}

StartTaskResponse* StartTaskResponse::default_instance_ = NULL;

StartTaskResponse* StartTaskResponse::New() const {
  return new StartTaskResponse;
}

void StartTaskResponse::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool StartTaskResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:baidu.galaxy.StartTaskResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:baidu.galaxy.StartTaskResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:baidu.galaxy.StartTaskResponse)
  return false;
#undef DO_
}

void StartTaskResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:baidu.galaxy.StartTaskResponse)
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:baidu.galaxy.StartTaskResponse)
}

::google::protobuf::uint8* StartTaskResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:baidu.galaxy.StartTaskResponse)
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:baidu.galaxy.StartTaskResponse)
  return target;
}

int StartTaskResponse::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StartTaskResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const StartTaskResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const StartTaskResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void StartTaskResponse::MergeFrom(const StartTaskResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void StartTaskResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StartTaskResponse::CopyFrom(const StartTaskResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StartTaskResponse::IsInitialized() const {

  return true;
}

void StartTaskResponse::Swap(StartTaskResponse* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata StartTaskResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = StartTaskResponse_descriptor_;
  metadata.reflection = StartTaskResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

StopTaskRequest::StopTaskRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:baidu.galaxy.StopTaskRequest)
}

void StopTaskRequest::InitAsDefaultInstance() {
}

StopTaskRequest::StopTaskRequest(const StopTaskRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:baidu.galaxy.StopTaskRequest)
}

void StopTaskRequest::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

StopTaskRequest::~StopTaskRequest() {
  // @@protoc_insertion_point(destructor:baidu.galaxy.StopTaskRequest)
  SharedDtor();
}

void StopTaskRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void StopTaskRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StopTaskRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return StopTaskRequest_descriptor_;
}

const StopTaskRequest& StopTaskRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_appmaster_2eproto();
  return *default_instance_;
}

StopTaskRequest* StopTaskRequest::default_instance_ = NULL;

StopTaskRequest* StopTaskRequest::New() const {
  return new StopTaskRequest;
}

void StopTaskRequest::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool StopTaskRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:baidu.galaxy.StopTaskRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:baidu.galaxy.StopTaskRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:baidu.galaxy.StopTaskRequest)
  return false;
#undef DO_
}

void StopTaskRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:baidu.galaxy.StopTaskRequest)
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:baidu.galaxy.StopTaskRequest)
}

::google::protobuf::uint8* StopTaskRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:baidu.galaxy.StopTaskRequest)
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:baidu.galaxy.StopTaskRequest)
  return target;
}

int StopTaskRequest::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StopTaskRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const StopTaskRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const StopTaskRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void StopTaskRequest::MergeFrom(const StopTaskRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void StopTaskRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StopTaskRequest::CopyFrom(const StopTaskRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StopTaskRequest::IsInitialized() const {

  return true;
}

void StopTaskRequest::Swap(StopTaskRequest* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata StopTaskRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = StopTaskRequest_descriptor_;
  metadata.reflection = StopTaskRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

StopTaskResponse::StopTaskResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:baidu.galaxy.StopTaskResponse)
}

void StopTaskResponse::InitAsDefaultInstance() {
}

StopTaskResponse::StopTaskResponse(const StopTaskResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:baidu.galaxy.StopTaskResponse)
}

void StopTaskResponse::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

StopTaskResponse::~StopTaskResponse() {
  // @@protoc_insertion_point(destructor:baidu.galaxy.StopTaskResponse)
  SharedDtor();
}

void StopTaskResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void StopTaskResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StopTaskResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return StopTaskResponse_descriptor_;
}

const StopTaskResponse& StopTaskResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_appmaster_2eproto();
  return *default_instance_;
}

StopTaskResponse* StopTaskResponse::default_instance_ = NULL;

StopTaskResponse* StopTaskResponse::New() const {
  return new StopTaskResponse;
}

void StopTaskResponse::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool StopTaskResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:baidu.galaxy.StopTaskResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:baidu.galaxy.StopTaskResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:baidu.galaxy.StopTaskResponse)
  return false;
#undef DO_
}

void StopTaskResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:baidu.galaxy.StopTaskResponse)
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:baidu.galaxy.StopTaskResponse)
}

::google::protobuf::uint8* StopTaskResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:baidu.galaxy.StopTaskResponse)
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:baidu.galaxy.StopTaskResponse)
  return target;
}

int StopTaskResponse::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StopTaskResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const StopTaskResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const StopTaskResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void StopTaskResponse::MergeFrom(const StopTaskResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void StopTaskResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StopTaskResponse::CopyFrom(const StopTaskResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StopTaskResponse::IsInitialized() const {

  return true;
}

void StopTaskResponse::Swap(StopTaskResponse* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata StopTaskResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = StopTaskResponse_descriptor_;
  metadata.reflection = StopTaskResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

UpdateTaskRequest::UpdateTaskRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:baidu.galaxy.UpdateTaskRequest)
}

void UpdateTaskRequest::InitAsDefaultInstance() {
}

UpdateTaskRequest::UpdateTaskRequest(const UpdateTaskRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:baidu.galaxy.UpdateTaskRequest)
}

void UpdateTaskRequest::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UpdateTaskRequest::~UpdateTaskRequest() {
  // @@protoc_insertion_point(destructor:baidu.galaxy.UpdateTaskRequest)
  SharedDtor();
}

void UpdateTaskRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void UpdateTaskRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UpdateTaskRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UpdateTaskRequest_descriptor_;
}

const UpdateTaskRequest& UpdateTaskRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_appmaster_2eproto();
  return *default_instance_;
}

UpdateTaskRequest* UpdateTaskRequest::default_instance_ = NULL;

UpdateTaskRequest* UpdateTaskRequest::New() const {
  return new UpdateTaskRequest;
}

void UpdateTaskRequest::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool UpdateTaskRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:baidu.galaxy.UpdateTaskRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:baidu.galaxy.UpdateTaskRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:baidu.galaxy.UpdateTaskRequest)
  return false;
#undef DO_
}

void UpdateTaskRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:baidu.galaxy.UpdateTaskRequest)
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:baidu.galaxy.UpdateTaskRequest)
}

::google::protobuf::uint8* UpdateTaskRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:baidu.galaxy.UpdateTaskRequest)
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:baidu.galaxy.UpdateTaskRequest)
  return target;
}

int UpdateTaskRequest::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UpdateTaskRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const UpdateTaskRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const UpdateTaskRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void UpdateTaskRequest::MergeFrom(const UpdateTaskRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void UpdateTaskRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateTaskRequest::CopyFrom(const UpdateTaskRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateTaskRequest::IsInitialized() const {

  return true;
}

void UpdateTaskRequest::Swap(UpdateTaskRequest* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata UpdateTaskRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UpdateTaskRequest_descriptor_;
  metadata.reflection = UpdateTaskRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

UpdateTaskResponse::UpdateTaskResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:baidu.galaxy.UpdateTaskResponse)
}

void UpdateTaskResponse::InitAsDefaultInstance() {
}

UpdateTaskResponse::UpdateTaskResponse(const UpdateTaskResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:baidu.galaxy.UpdateTaskResponse)
}

void UpdateTaskResponse::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UpdateTaskResponse::~UpdateTaskResponse() {
  // @@protoc_insertion_point(destructor:baidu.galaxy.UpdateTaskResponse)
  SharedDtor();
}

void UpdateTaskResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void UpdateTaskResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UpdateTaskResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UpdateTaskResponse_descriptor_;
}

const UpdateTaskResponse& UpdateTaskResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_appmaster_2eproto();
  return *default_instance_;
}

UpdateTaskResponse* UpdateTaskResponse::default_instance_ = NULL;

UpdateTaskResponse* UpdateTaskResponse::New() const {
  return new UpdateTaskResponse;
}

void UpdateTaskResponse::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool UpdateTaskResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:baidu.galaxy.UpdateTaskResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:baidu.galaxy.UpdateTaskResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:baidu.galaxy.UpdateTaskResponse)
  return false;
#undef DO_
}

void UpdateTaskResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:baidu.galaxy.UpdateTaskResponse)
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:baidu.galaxy.UpdateTaskResponse)
}

::google::protobuf::uint8* UpdateTaskResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:baidu.galaxy.UpdateTaskResponse)
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:baidu.galaxy.UpdateTaskResponse)
  return target;
}

int UpdateTaskResponse::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UpdateTaskResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const UpdateTaskResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const UpdateTaskResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void UpdateTaskResponse::MergeFrom(const UpdateTaskResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void UpdateTaskResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateTaskResponse::CopyFrom(const UpdateTaskResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateTaskResponse::IsInitialized() const {

  return true;
}

void UpdateTaskResponse::Swap(UpdateTaskResponse* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata UpdateTaskResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UpdateTaskResponse_descriptor_;
  metadata.reflection = UpdateTaskResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

ExecuteCmdRequest::ExecuteCmdRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:baidu.galaxy.ExecuteCmdRequest)
}

void ExecuteCmdRequest::InitAsDefaultInstance() {
}

ExecuteCmdRequest::ExecuteCmdRequest(const ExecuteCmdRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:baidu.galaxy.ExecuteCmdRequest)
}

void ExecuteCmdRequest::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ExecuteCmdRequest::~ExecuteCmdRequest() {
  // @@protoc_insertion_point(destructor:baidu.galaxy.ExecuteCmdRequest)
  SharedDtor();
}

void ExecuteCmdRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ExecuteCmdRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ExecuteCmdRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ExecuteCmdRequest_descriptor_;
}

const ExecuteCmdRequest& ExecuteCmdRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_appmaster_2eproto();
  return *default_instance_;
}

ExecuteCmdRequest* ExecuteCmdRequest::default_instance_ = NULL;

ExecuteCmdRequest* ExecuteCmdRequest::New() const {
  return new ExecuteCmdRequest;
}

void ExecuteCmdRequest::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ExecuteCmdRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:baidu.galaxy.ExecuteCmdRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:baidu.galaxy.ExecuteCmdRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:baidu.galaxy.ExecuteCmdRequest)
  return false;
#undef DO_
}

void ExecuteCmdRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:baidu.galaxy.ExecuteCmdRequest)
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:baidu.galaxy.ExecuteCmdRequest)
}

::google::protobuf::uint8* ExecuteCmdRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:baidu.galaxy.ExecuteCmdRequest)
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:baidu.galaxy.ExecuteCmdRequest)
  return target;
}

int ExecuteCmdRequest::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ExecuteCmdRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ExecuteCmdRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ExecuteCmdRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ExecuteCmdRequest::MergeFrom(const ExecuteCmdRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ExecuteCmdRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExecuteCmdRequest::CopyFrom(const ExecuteCmdRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExecuteCmdRequest::IsInitialized() const {

  return true;
}

void ExecuteCmdRequest::Swap(ExecuteCmdRequest* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ExecuteCmdRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ExecuteCmdRequest_descriptor_;
  metadata.reflection = ExecuteCmdRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

ExecuteCmdResponse::ExecuteCmdResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:baidu.galaxy.ExecuteCmdResponse)
}

void ExecuteCmdResponse::InitAsDefaultInstance() {
}

ExecuteCmdResponse::ExecuteCmdResponse(const ExecuteCmdResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:baidu.galaxy.ExecuteCmdResponse)
}

void ExecuteCmdResponse::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ExecuteCmdResponse::~ExecuteCmdResponse() {
  // @@protoc_insertion_point(destructor:baidu.galaxy.ExecuteCmdResponse)
  SharedDtor();
}

void ExecuteCmdResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ExecuteCmdResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ExecuteCmdResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ExecuteCmdResponse_descriptor_;
}

const ExecuteCmdResponse& ExecuteCmdResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_appmaster_2eproto();
  return *default_instance_;
}

ExecuteCmdResponse* ExecuteCmdResponse::default_instance_ = NULL;

ExecuteCmdResponse* ExecuteCmdResponse::New() const {
  return new ExecuteCmdResponse;
}

void ExecuteCmdResponse::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ExecuteCmdResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:baidu.galaxy.ExecuteCmdResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:baidu.galaxy.ExecuteCmdResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:baidu.galaxy.ExecuteCmdResponse)
  return false;
#undef DO_
}

void ExecuteCmdResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:baidu.galaxy.ExecuteCmdResponse)
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:baidu.galaxy.ExecuteCmdResponse)
}

::google::protobuf::uint8* ExecuteCmdResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:baidu.galaxy.ExecuteCmdResponse)
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:baidu.galaxy.ExecuteCmdResponse)
  return target;
}

int ExecuteCmdResponse::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ExecuteCmdResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ExecuteCmdResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ExecuteCmdResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ExecuteCmdResponse::MergeFrom(const ExecuteCmdResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ExecuteCmdResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExecuteCmdResponse::CopyFrom(const ExecuteCmdResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExecuteCmdResponse::IsInitialized() const {

  return true;
}

void ExecuteCmdResponse::Swap(ExecuteCmdResponse* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ExecuteCmdResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ExecuteCmdResponse_descriptor_;
  metadata.reflection = ExecuteCmdResponse_reflection_;
  return metadata;
}


// ===================================================================

AppMaster::~AppMaster() {}

const ::google::protobuf::ServiceDescriptor* AppMaster::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AppMaster_descriptor_;
}

const ::google::protobuf::ServiceDescriptor* AppMaster::GetDescriptor() {
  protobuf_AssignDescriptorsOnce();
  return AppMaster_descriptor_;
}

void AppMaster::AssignTask(::google::protobuf::RpcController* controller,
                         const ::baidu::galaxy::AssignTaskRequest*,
                         ::baidu::galaxy::AssignTaskResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method AssignTask() not implemented.");
  done->Run();
}

void AppMaster::ListTasks(::google::protobuf::RpcController* controller,
                         const ::baidu::galaxy::ListTasksRequest*,
                         ::baidu::galaxy::ListTasksResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method ListTasks() not implemented.");
  done->Run();
}

void AppMaster::StartTask(::google::protobuf::RpcController* controller,
                         const ::baidu::galaxy::StartTaskRequest*,
                         ::baidu::galaxy::StartTaskResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method StartTask() not implemented.");
  done->Run();
}

void AppMaster::StopTask(::google::protobuf::RpcController* controller,
                         const ::baidu::galaxy::StopTaskRequest*,
                         ::baidu::galaxy::StopTaskResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method StopTask() not implemented.");
  done->Run();
}

void AppMaster::UpdateTask(::google::protobuf::RpcController* controller,
                         const ::baidu::galaxy::UpdateTaskRequest*,
                         ::baidu::galaxy::UpdateTaskResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method UpdateTask() not implemented.");
  done->Run();
}

void AppMaster::ExecuteCmd(::google::protobuf::RpcController* controller,
                         const ::baidu::galaxy::ExecuteCmdRequest*,
                         ::baidu::galaxy::ExecuteCmdResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method ExecuteCmd() not implemented.");
  done->Run();
}

void AppMaster::CallMethod(const ::google::protobuf::MethodDescriptor* method,
                             ::google::protobuf::RpcController* controller,
                             const ::google::protobuf::Message* request,
                             ::google::protobuf::Message* response,
                             ::google::protobuf::Closure* done) {
  GOOGLE_DCHECK_EQ(method->service(), AppMaster_descriptor_);
  switch(method->index()) {
    case 0:
      AssignTask(controller,
             ::google::protobuf::down_cast<const ::baidu::galaxy::AssignTaskRequest*>(request),
             ::google::protobuf::down_cast< ::baidu::galaxy::AssignTaskResponse*>(response),
             done);
      break;
    case 1:
      ListTasks(controller,
             ::google::protobuf::down_cast<const ::baidu::galaxy::ListTasksRequest*>(request),
             ::google::protobuf::down_cast< ::baidu::galaxy::ListTasksResponse*>(response),
             done);
      break;
    case 2:
      StartTask(controller,
             ::google::protobuf::down_cast<const ::baidu::galaxy::StartTaskRequest*>(request),
             ::google::protobuf::down_cast< ::baidu::galaxy::StartTaskResponse*>(response),
             done);
      break;
    case 3:
      StopTask(controller,
             ::google::protobuf::down_cast<const ::baidu::galaxy::StopTaskRequest*>(request),
             ::google::protobuf::down_cast< ::baidu::galaxy::StopTaskResponse*>(response),
             done);
      break;
    case 4:
      UpdateTask(controller,
             ::google::protobuf::down_cast<const ::baidu::galaxy::UpdateTaskRequest*>(request),
             ::google::protobuf::down_cast< ::baidu::galaxy::UpdateTaskResponse*>(response),
             done);
      break;
    case 5:
      ExecuteCmd(controller,
             ::google::protobuf::down_cast<const ::baidu::galaxy::ExecuteCmdRequest*>(request),
             ::google::protobuf::down_cast< ::baidu::galaxy::ExecuteCmdResponse*>(response),
             done);
      break;
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      break;
  }
}

const ::google::protobuf::Message& AppMaster::GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::baidu::galaxy::AssignTaskRequest::default_instance();
    case 1:
      return ::baidu::galaxy::ListTasksRequest::default_instance();
    case 2:
      return ::baidu::galaxy::StartTaskRequest::default_instance();
    case 3:
      return ::baidu::galaxy::StopTaskRequest::default_instance();
    case 4:
      return ::baidu::galaxy::UpdateTaskRequest::default_instance();
    case 5:
      return ::baidu::galaxy::ExecuteCmdRequest::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *reinterpret_cast< ::google::protobuf::Message*>(NULL);
  }
}

const ::google::protobuf::Message& AppMaster::GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::baidu::galaxy::AssignTaskResponse::default_instance();
    case 1:
      return ::baidu::galaxy::ListTasksResponse::default_instance();
    case 2:
      return ::baidu::galaxy::StartTaskResponse::default_instance();
    case 3:
      return ::baidu::galaxy::StopTaskResponse::default_instance();
    case 4:
      return ::baidu::galaxy::UpdateTaskResponse::default_instance();
    case 5:
      return ::baidu::galaxy::ExecuteCmdResponse::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *reinterpret_cast< ::google::protobuf::Message*>(NULL);
  }
}

AppMaster_Stub::AppMaster_Stub(::google::protobuf::RpcChannel* channel)
  : channel_(channel), owns_channel_(false) {}
AppMaster_Stub::AppMaster_Stub(
    ::google::protobuf::RpcChannel* channel,
    ::google::protobuf::Service::ChannelOwnership ownership)
  : channel_(channel),
    owns_channel_(ownership == ::google::protobuf::Service::STUB_OWNS_CHANNEL) {}
AppMaster_Stub::~AppMaster_Stub() {
  if (owns_channel_) delete channel_;
}

void AppMaster_Stub::AssignTask(::google::protobuf::RpcController* controller,
                              const ::baidu::galaxy::AssignTaskRequest* request,
                              ::baidu::galaxy::AssignTaskResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(0),
                       controller, request, response, done);
}
void AppMaster_Stub::ListTasks(::google::protobuf::RpcController* controller,
                              const ::baidu::galaxy::ListTasksRequest* request,
                              ::baidu::galaxy::ListTasksResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(1),
                       controller, request, response, done);
}
void AppMaster_Stub::StartTask(::google::protobuf::RpcController* controller,
                              const ::baidu::galaxy::StartTaskRequest* request,
                              ::baidu::galaxy::StartTaskResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(2),
                       controller, request, response, done);
}
void AppMaster_Stub::StopTask(::google::protobuf::RpcController* controller,
                              const ::baidu::galaxy::StopTaskRequest* request,
                              ::baidu::galaxy::StopTaskResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(3),
                       controller, request, response, done);
}
void AppMaster_Stub::UpdateTask(::google::protobuf::RpcController* controller,
                              const ::baidu::galaxy::UpdateTaskRequest* request,
                              ::baidu::galaxy::UpdateTaskResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(4),
                       controller, request, response, done);
}
void AppMaster_Stub::ExecuteCmd(::google::protobuf::RpcController* controller,
                              const ::baidu::galaxy::ExecuteCmdRequest* request,
                              ::baidu::galaxy::ExecuteCmdResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(5),
                       controller, request, response, done);
}

// @@protoc_insertion_point(namespace_scope)

}  // namespace galaxy
}  // namespace baidu

// @@protoc_insertion_point(global_scope)
